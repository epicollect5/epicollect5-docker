services:
  # Web application container
  app:
    build:
      context: .
      dockerfile: docker/web/Dockerfile
    ports:
      - "${WEB_PORT:-80}:80"  # Uses WEB_PORT env var or defaults to 80
    volumes:
      - ./:/var/www/html
    environment:
      DB_CONNECTION: mysql
      DB_HOST: db  # Point to the db service
      DB_PORT: 3306
      DB_DATABASE: epicollect5
      DB_USERNAME: epicollect5
      DB_PASSWORD: ${DB_PASSWORD:-password}
      TERM: xterm
      # Superadmin credentials
      SUPER_ADMIN_EMAIL: ${SUPER_ADMIN_EMAIL:-admin@example.com}
      SUPER_ADMIN_FIRST_NAME: ${SUPER_ADMIN_FIRST_NAME:-Admin}
      SUPER_ADMIN_LAST_NAME: ${SUPER_ADMIN_LAST_NAME:-User}
      SUPER_ADMIN_PASSWORD: ${SUPER_ADMIN_PASSWORD:-AdminPassword123!}
      # System email for alerts
      SYSTEM_EMAIL: ${SYSTEM_EMAIL:-alerts@example.com}
    healthcheck:
      test: ["CMD", "test", "!", "-f", "/tmp/deployment_in_progress"]
      interval: 10s
      timeout: 5s
      retries: 120  # Allow up to 20 minutes for deployment
      start_period: 60s
    depends_on:
      - db
    restart: unless-stopped
    networks:
      - epicollect_network

  # Database container
  db:
    image: mysql:8.0
    volumes:
      - mysql_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root_password}
      MYSQL_DATABASE: epicollect5
      MYSQL_USER: epicollect5
      MYSQL_PASSWORD: ${DB_PASSWORD:-password}
    ports:
      - "${DB_PORT:-3306}:3306"
    restart: unless-stopped
    networks:
      - epicollect_network

networks:
  epicollect_network:
    driver: bridge

volumes:
  mysql_data:
    driver: local
  letsencrypt:  # Volume for Let's Encrypt certificates
    driver: local
